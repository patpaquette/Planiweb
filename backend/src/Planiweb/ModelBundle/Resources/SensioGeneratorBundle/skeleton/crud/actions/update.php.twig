
    /**
{% block phpdoc_method_header %}
     * Edits an existing {{ entity }} entity.
{% endblock phpdoc_method_header %}
     *
{% block phpdoc_method_annotations %}
{% if 'annotation' == format %}
     * @Route("/{id}", name="{{ route_name_prefix }}_update")
     * @Method("PUT")
     * @Template("{{ bundle }}:{{ entity }}:edit.html.twig")
{% endif %}
{% endblock phpdoc_method_annotations %}
     */
{% block method_definition %}
    public function updateAction(Request $request, $id)
{% endblock method_definition %}
    {
{% block method_body %}
        $em = $this->getDoctrine()->getManager();

        $entity = $em->getRepository('{{ bundle }}:{{ entity }}')->find($id);

        if (!$entity) {
            throw $this->createNotFoundException('Unable to find {{ entity }} entity.');
        }
        
        $updatedEntity = $this->deserialize($request->getContent(), "{{namespace}}\Entity\{{entity}}");

        $id = $updatedEntity->getId();
        $errors = $this->validate($updatedEntity);

        //insufficient data
        if(!isset($id) || count($errors) > 0)
        {
            return new Response(null, 400);
        }

        $em->persist($updatedEntity);
        $em->flush();

{% endblock method_body %}

{% block method_return %}
        return new JsonResponse(array('id' => $updatedEntity->getId()));
{% endblock method_return %}
    }
