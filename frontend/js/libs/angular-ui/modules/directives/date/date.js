// Generated by CoffeeScript 1.3.3

/*
 jQuery UI Datepicker plugin wrapper
 
 @param [ui-date] {object} Options to pass to $.fn.datepicker() merged onto ui.config
*/


(function() {
  angular.module('ui.directives', []).directive('uiDate', [
    'ui.config', function(uiConfig) {
      var options;
      options = {};
      if (uiConfig.date != null) {
        angular.extend(options, uiConfig.date);
      }
      return {
        require: '?ngModel',
        link: function(scope, element, attrs, controller) {
          var opts, updateModel, usersOnSelectHandler;
          opts = angular.extend({}, options, scope.$eval(attrs.uiDate));
          /* If we have a controller (i.e. ngModelController) then wire it up
          */

          if (controller != null) {
            updateModel = function(value, picker) {
              return scope.$apply(function() {
                return controller.$setViewValue(element.datepicker("getDate"));
              });
            };
            if (opts.onSelect != null) {
              /* Caller has specified onSelect to call this as well as updating the model
              */

              usersOnSelectHandler = opts.onSelect;
              opts.onSelect = function(value, picker) {
                updateModel(value);
                return usersOnSelectHandler(value, picker);
              };
            } else {
              /* No onSelect already specified so just update the model
              */

              opts.onSelect = updateModel;
            }
            /* Update the date picker when the model changes
            */

            controller.$render = function() {
              var date;
              date = controller.$viewValue;
              if (!(date instanceof Date)) {
                date = new Date(date);
              }
              return element.datepicker("setDate", date);
            };
          }
          /* Create the datepicker widget
          */

          return element.datepicker(opts);
        }
      };
    }
  ]);

}).call(this);
